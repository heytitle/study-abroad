{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["headerStyle","paddingBottom","borderBottom","SummerSchoolRow","_ref","data","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","style","marginTop","marginBottom","padding","margin","color","href","link","name","countryData","emoji","date_start","date_end","marginLeft","location","country","isAvailable","deadline","notes","note","IndexPage","_useQueryParam","useQueryParam","StringParam","window","queryRegion","setQueryRegion","_useState","useState","region","setRegion","useEffect","today","moment","summerSchools","_public_static_d_2324780458_json__WEBPACK_IMPORTED_MODULE_10__","allSummerSchoolsCsv","edges","map","s","node","Object","assign","deadlineMoment","countries","getCode","validRegions","Array","from","Set","continent","sort","selectedScholarships","filter","availableScholarships","b","notAvailableScholarships","aa","bb","_components_layout__WEBPACK_IMPORTED_MODULE_16__","_components_seo__WEBPACK_IMPORTED_MODULE_17__","title","value","onChange","e","v","target","key","t","continents","length","r","m","module","exports","require","default","ProdPageRenderer","pageResources","React","InternalPageRenderer","json","SEO","description","lang","meta","site","_public_static_d_3791699670_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","url","image","author","concat","defaultProps","loader","enqueue","createContext","Header","siteTitle","react_default","maxWidth","gatsby_link_default","to","textDecoration","verticalAlign","height","src","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-a05a497509068cadec09.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport moment from \"moment\"\n\nimport {countries, continents} from \"countries-list\"\nimport { getCode } from \"country-list\"\n\n\nimport { useQueryParam, StringParam } from 'use-query-params'\n\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst headerStyle = {\n  paddingBottom: \"0.3em\", \n  borderBottom: \"1px solid\"\n}\n\nconst getQueryFromLocation = () => {\n  if(typeof window !== 'undefined' && window) {\n    return \"\" // useQueryParam will parse query params automatically\n  } else {\n    return \"?dummy-param\"\n  }\n}\n\nconst SummerSchoolRow = ({data}) => {\n  return <div style={{marginTop: \"1.5em\", marginBottom: \"2em\"}}>\n    <h4 style={{padding: 0, margin: \"5px 0\"}}>\n      <a style={{color: \"black\"}} href={data.link}>\n        {data.name} {data.countryData.emoji}\n      </a>\n    </h4>\n    <div>\n      <span>\n        <b>Dates: </b>{data.date_start} - {data.date_end}\n      </span>\n      <span style={{marginLeft: \"2em\"}}>\n        <b>Location:</b> {data.location}, {data.country}\n      </span>\n    </div>\n    <div>\n      <b>{ data.isAvailable? \"Application deadline\" : \"Previous application deadline\" }:</b> {data.deadline}\n    </div>\n    { data.notes &&\n      <i>Note: {data.note}</i>\n    }\n  </div>\n}\n\nconst IndexPage = () => {\n  const [queryRegion, setQueryRegion] = useQueryParam(\n    \"region\",\n    StringParam,\n    getQueryFromLocation()\n  )\n\n  const [region, setRegion] = useState()\n\n  const setTypeValue = (v) => {\n    setQueryRegion(v)\n    setRegion(v)\n  }\n\n  useEffect(() => {\n    setRegion(queryRegion || \"all\")\n  }, [])\n\n  const today = moment()\n  const db = useStaticQuery(graphql`\n    query {\n        allSummerSchoolsCsv {\n          edges {\n            node {\n              name\n              location\n              country\n              date_start\n              date_end\n              cost\n              deadline\n              link\n              note\n            }\n          }\n        }\n      }\n    `\n  )\n\n\n\n  const summerSchools = db.allSummerSchoolsCsv.edges.map( s => {\n      const deadline = moment(s.node.deadline, \"DD/MM/YYYY\")\n      return {\n        ...s.node,\n        deadlineMoment: deadline,\n        isAvailable: deadline > today,\n        countryData: countries[getCode(s.node.country) || s.node.country]\n      }\n  })\n\n\n  const validRegions = Array.from(\n    new Set(summerSchools.map(s => s.countryData.continent))\n  )\n\n  validRegions.sort()\n\n  const selectedScholarships = summerSchools\n    .filter(s => s.countryData.continent === region || region === \"all\")\n\n  const availableScholarships = selectedScholarships.filter(s => s.isAvailable)\n  availableScholarships.sort( (a, b) => a.deadlineMoment - b.deadlineMoment)\n\n  const notAvailableScholarships = selectedScholarships.filter(s => !s.isAvailable)\n\n  notAvailableScholarships.sort((aa, bb) => {\n    const a = aa.name\n    const b = bb.name\n\n    if( a < b ) { return -1 }\n    else if (a > b) { return 1 }\n    else { return 0 }\n  } )\n\n\n  return <Layout>\n    <SEO title=\"Home\"/>\n    <div style={{ marginBottom: \"3em\" }}>\n      <b>Region {` `}\n      <select value={region} onChange={(e) => setTypeValue(e.target.value)}>\n        <option key=\"all\" value=\"all\">all</option>\n        {\n          validRegions.map(t => {\n            return <option key={t} value={t}>{continents[t]}</option>\n          })\n        }\n      </select>\n      </b>\n      <br/>\n    </div>\n    <div>\n      <h3 style={headerStyle}>Call for Application ({availableScholarships.length} schools)</h3>\n      <div>\n        { \n          availableScholarships.map(r => <SummerSchoolRow key={r.name} data={r}/>)\n        }\n      </div>\n      <h3 style={headerStyle}>Previous Summer Schools ({notAvailableScholarships.length} schools) </h3>\n      <div>\n        { \n          notAvailableScholarships.map(r => <SummerSchoolRow key={r.name} data={r}/>)\n        }\n      </div>\n    </div>\n    <hr />\n  </Layout>\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n            url\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={site.siteMetadata.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: site.siteMetadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:url`,\n          content: site.siteMetadata.url,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: site.siteMetadata.image,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: site.siteMetadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:image`,\n          content: site.siteMetadata.image,\n        },\n        {\n          name: `image`,\n          content: site.siteMetadata.image,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <h3\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n        paddingBottom: 0,\n      }}\n    >\n      <div style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n        {`  `}\n        <a href=\"https://github.com/tfburns/compneuro-summer-schools\">\n          <img \n            style={{verticalAlign: \"middle\", height: \"20px\", marginTop: \"20px\"}}\n            src=\"https://img.shields.io/github/stars/tfburns/compneuro-summer-schools?style=social\"\n          />\n        </a>\n      </div>\n    </h3>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a> by <a href=\"https://tfburns.com\">T</a> & <a href=\"https://pat.chormai.org\">P</a>.\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}